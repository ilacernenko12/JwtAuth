<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>by.che</groupId>
    <artifactId>authorization</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>AuthorizationService</name>
    <description>AuthorizationService</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <!-- cекция <properties> служит для задания параметров или значений переменных, которые будут использоваться в других частях pom.xml-->
    <properties>
        <!-- Версия Java, которая будет использоваться для компиляции проекта -->
        <java.version>17</java.version>
        <!-- задает версию Spring Cloud, которую будет использовать проект. позволяет легко обновлять версию, изменяя только значение в <properties> -->
        <spring-cloud.version>2023.0.3</spring-cloud.version>
    </properties>
    <dependencies>
        <!-- позволяет быстро создавать REST API и веб-приложения. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- подключает приложение к Eureka Server, чтобы оно могло быть обнаружено и взаимодействовать с другими сервисами -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- добавляет поддержку базовых методов безопасности, таких как аутентификация и авторизация -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- добавляет поддержку работы с базой данных через JPA, что упрощает работу с данными -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- драйвер для подключения к базе данных PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <!-- обеспечивает поддержку JSON Web Token (JWT), необходимую для OAuth2 авторизации -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>
        <!-- геттеры/сеттеры, конструктора, equals и hashCode -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- библиотеки для тестирования Spring Boot приложений -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
    </dependencies>

    <!-- Секция <dependencyManagement> управляет версиями зависимостей для проекта и его модулей (если проект многомодульный).
    В отличие от <dependencies>, она не добавляет зависимость в проект напрямую, а указывает версию и настройки зависимости,
    чтобы их можно было использовать в других модулях проекта.
    Атрибут <scope>import делает зависимость доступной для всех модулей, позволяя использовать зависимости Spring Cloud
    с указанной версией без повторного задания версий в каждом модуле
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- предоставляет команды для сборки, запуска и создания исполняемых JAR-файлов Spring Boot приложения с помощью Maven -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
